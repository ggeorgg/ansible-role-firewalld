---
# tasks file for ansible-role-firewalld

- name: Ensure firewalld is installed.
  yum: name=firewalld state=present

- name: Ensure firewalld is enabled and started.
  service: name=firewalld enabled=yes state=started

- name: Ensure the 'lo' interface is in the 'trusted' zone.
  command: firewall-cmd --zone=trusted --list-interfaces
  changed_when: false
  register: result_firewalld_trusted_interfaces

- name: Ensure the 'lo' interface is in the 'trusted' zone.
  command: firewall-cmd --zone=trusted --add-interface=lo --permanent
  when: "'lo' not in result_firewalld_trusted_interfaces.stdout"
  notify: Reload firewalld

- name: Ensure 'public' is the default firewalld zone.
  command: firewall-cmd --get-default-zone
  changed_when: false
  register: result_firewalld_default_zone

- name: Set 'public' as the default firewalld zone.
  command: firewall-cmd --set-default-zone={{ firewalld_default_zone }}
  when: "result_firewalld_default_zone.stdout != firewalld_default_zone"

- name: Get current firewalld allowed services.
  shell: >
    firewall-cmd --zone={{ firewalld_default_zone }} --list-services | tr " " "\n"
  changed_when: false
  register: result_firewalld_allowed_services

- name: Disable unreferenced firewalld services.
  command: firewall-cmd --zone={{ firewalld_default_zone }} --remove-service={{ item }} --permanent
  when: item not in firewalld_allowed_services
  with_items: "{{ result_firewalld_allowed_services.stdout_lines }}"
  notify: Reload firewalld

- name: Get current firewalld allowed ports.
  shell: >
    firewall-cmd --zone={{ firewalld_default_zone }} --list-ports | tr " " "\n"
  changed_when: false
  register: result_firewalld_allowed_ports

- name: Disable unreferenced firewalld ports.
  command: firewall-cmd --zone={{ firewalld_default_zone }} --remove-port={{ item }} --permanent
  when: item not in firewalld_allowed_ports
  with_items: "{{ result_firewalld_allowed_ports.stdout_lines }}"
  notify: Reload firewalld

- name: Get current firewalld allowed forward ports.
  shell: >
    firewall-cmd --zone={{ firewalld_default_zone }} --list-forward-ports
  changed_when: false
  register: result_firewalld_allowed_forward_ports

- name: Disable unreferenced firewalld forward ports.
  command: firewall-cmd --zone={{ firewalld_default_zone }} --remove-forward-port={{ item }} --permanent
  when: item not in firewalld_allowed_forward_ports
  with_items: "{{ result_firewalld_allowed_forward_ports.stdout_lines }}"
  notify: Reload firewalld

- name: Get current firewalld rich rules.
  shell: >
    firewall-cmd --zone={{ firewalld_default_zone }} --list-rich-rules
  changed_when: false
  register: result_firewalld_rich_rules

- name: Disable unreferenced firewalld rich rules.
  command: >
    firewall-cmd --zone={{ firewalld_default_zone }} --remove-rich-rule='{{ item }}' --permanent
  when: item not in firewalld_rich_rules
  with_items: "{{ result_firewalld_rich_rules.stdout_lines }}"
  notify: Reload firewalld

- name: Configure firewalld allowed services.
  command: >
    firewall-cmd
    --zone={{ firewalld_default_zone }}
    --add-service={{ item }}
    --permanent
  when: item not in result_firewalld_allowed_services.stdout_lines
  with_items: "{{ firewalld_allowed_services }}"
  notify: Reload firewalld

- name: Configure firewalld allowed ports.
  command: >
    firewall-cmd
    --zone={{ firewalld_default_zone }}
    --add-port={{ item }}
    --permanent
  when: item not in result_firewalld_allowed_ports.stdout_lines
  with_items: "{{ firewalld_allowed_ports }}"
  notify: Reload firewalld

- name: Configure firewalld allowed forward ports.
  command: >
    firewall-cmd
    --zone={{ firewalld_default_zone }}
    --add-forward-port={{ item }}
    --permanent
  when: item not in result_firewalld_allowed_forward_ports.stdout_lines
  with_items: "{{ firewalld_allowed_forward_ports }}"
  notify: Reload firewalld

- name: Configure firewalld rich rules.
  command: >
    firewall-cmd
    --zone={{ firewalld_default_zone }}
    --add-rich-rule='{{ item }}'
    --permanent
  when: item not in result_firewalld_rich_rules.stdout_lines
  with_items: "{{ firewalld_rich_rules }}"
  notify: Reload firewalld
